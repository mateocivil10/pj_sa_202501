# -*- coding: utf-8 -*-
"""costocartera.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/12Hk8hAF7pJGPwxOG8tV53dNN5KOI8Q9G
"""

import numpy as np
import matplotlib.pyplot as plt

# Parámetros del problema
lambda_poisson = 1  # Tasa de siniestros esperados
media_gamma = 2_000_000  # Media de la severidad del siniestro
std_gamma = 1_000_000  # Desviación estándar de la severidad
num_simulaciones = 10_000  # Número de simulaciones

# Conversión de parámetros para la distribución Gamma
beta = std_gamma**2 / media_gamma  # Parámetro de escala (theta)
alpha = media_gamma / beta  # Parámetro de forma (k)

# Simulación Montecarlo
costos_totales = []
for _ in range(num_simulaciones):
    num_siniestros = np.random.poisson(lambda_poisson)  # Generar número de siniestros
    costos_siniestros = np.random.gamma(alpha, beta, num_siniestros)  # Generar costos
    costo_total = sum(costos_siniestros)  # Sumar los costos de los siniestros
    costos_totales.append(costo_total)

# Resultados y visualización
plt.hist(costos_totales, bins=50, density=True, alpha=0.6, color='b')
plt.xlabel("Costo total de la cartera ($)")
plt.ylabel("Frecuencia relativa")
plt.title("Simulación Montecarlo del costo de la cartera de seguros")
plt.show()


print(f"Costo medio estimado: ${np.mean(costos_totales):,.2f}")
print(f"Percentil 95% (valor máximo esperado con 95% de confianza): ${np.percentile(costos_totales, 95):,.2f}")