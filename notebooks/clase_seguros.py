# -*- coding: utf-8 -*-
"""Clase_Seguros.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1RItwQQt2jRpcRWPo2hONQ3D0a60vnlyq

La media de la cartera de seguros nos dice que el comportamiento de la siniestralidad para el producto de automÃ³viles sigue una distribuciÃ³n de poisson con lambda  igual a 1 y una severidad (coste en promedio) que sigue una distribuciÃ³n gamma con media igual a 2 millones y desviaciÃ³n estÃ¡ndar de 1 millones. simule el costo de la cartera para el prÃ³ximo ano

Frecuencia (NÂ° de siniestros): Poisson(Î» = 1)
Severidad (Costo de cada siniestro): Gamma(Î±, Î²)
Media de la Gamma = 2 millones
DesviaciÃ³n estÃ¡ndar de la Gamma = 1 millÃ³n
"""

import numpy as np
import matplotlib.pyplot as plt

# ðŸ“Œ ParÃ¡metros del ejercicio
lambda_poisson = 1      # Frecuencia esperada de siniestros
media_gamma = 2_000_000 # Media de la severidad en pesos
desv_gamma = 1_000_000  # DesviaciÃ³n estÃ¡ndar de la severidad en pesos
n_simulaciones = 500    # NÃºmero de simulaciones

# ðŸ“Œ Convertir media y desviaciÃ³n estÃ¡ndar en parÃ¡metros de la Gamma
varianza = desv_gamma ** 2
beta_gamma = media_gamma / varianza
alpha_gamma = media_gamma * beta_gamma

print(f"ParÃ¡metros de la Gamma -> alpha: {alpha_gamma:.2f}, beta: {beta_gamma:.8f}")

# ðŸ“Œ SimulaciÃ³n de Monte Carlo
costos_totales = []
for _ in range(n_simulaciones):
    N = np.random.poisson(lambda_poisson)  # NÃºmero de siniestros
    if N > 0:
        severidades = np.random.gamma(shape=alpha_gamma, scale=1/beta_gamma, size=N)
        costo_total = severidades.sum()
    else:
        costo_total = 0
    costos_totales.append(costo_total)

costos_totales = np.array(costos_totales)

# ðŸ“Œ Calcular percentiles
percentiles_valores = np.percentile(costos_totales, [5, 25, 50, 75, 95, 99])
percentiles_labels = ['P5', 'P25', 'P50 (Mediana)', 'P75', 'P95', 'P99']

print("\nâœ… Percentiles del costo total simulado (en pesos):")
for label, val in zip(percentiles_labels, percentiles_valores):
    print(f"{label}: {val:,.2f}")

# ðŸ“Œ Graficar la distribuciÃ³n de las simulaciones y los percentiles
plt.figure(figsize=(10, 6))
plt.hist(costos_totales, bins=30, color='skyblue', edgecolor='black', alpha=0.7)
plt.title('DistribuciÃ³n simulada del costo de la cartera (500 simulaciones)', fontsize=14)
plt.xlabel('Costo total (pesos)', fontsize=12)
plt.ylabel('Frecuencia', fontsize=12)

colors = ['red', 'orange', 'green', 'blue', 'purple', 'black']
for val, label, color in zip(percentiles_valores, percentiles_labels, colors):
    plt.axvline(val, color=color, linestyle='--', linewidth=2, label=f'{label}: {val/1_000_000:.2f} millones')

plt.legend()
plt.show()

# Mostrar todos los costos totales simulados (en pesos)
print("\nâœ… Costos totales de cada simulaciÃ³n (en pesos):")
for i, costo in enumerate(costos_totales, 1):
    print(f"SimulaciÃ³n {i}: {costo:,.2f}")

"""Matematicas de vida
Matematicas financiera
La capitalziacion es el proceso donde el dinero aumenta valor con el tiempo gracias a los intereses.
interes simple: una unica vez calculo aL FINAL  y compuesto: el interes genera interes, usado en bancos.
"""

import numpy as np

# 1. Convertir Tasa Nominal Anual (TNA) 34% con capitalizaciÃ³n mensual a Tasa Efectiva Anual (TEA)
TNA_1 = 0.34
m_1 = 12  # mensual
TEA_1 = (1 + (TNA_1 / m_1))**m_1 - 1
print(f"1) TEA equivalente: {TEA_1 * 100:.2f}%")

# 2. Calcular la TEA partiendo de una TNA 36% con capitalizaciÃ³n trimestral
TNA_2 = 0.36
m_2 = 4  # trimestral
TEA_2 = (1 + (TNA_2 / m_2))**m_2 - 1
print(f"2) TEA equivalente: {TEA_2 * 100:.2f}%")

# 3. Calcular la tasa nominal mensual a partir de una TEA del 41.16%
TEA_3 = 0.4116
m_3 = 12  # mensual
i_mensual_3 = ( (1 + TEA_3) ** (1/m_3) ) - 1
TNA_3 = i_mensual_3 * m_3
print(f"3) TNA mensual equivalente: {TNA_3 * 100:.2f}%")

# 4. Calcular la TEA si la tasa efectiva semestral es del 12%
TES_4 = 0.12
TEA_4 = (1 + TES_4)**2 - 1
print(f"4) TEA equivalente: {TEA_4 * 100:.2f}%")

# 5. Calcular la tasa efectiva semestral si la TEA es del 12%
TEA_5 = 0.12
TES_5 = (1 + TEA_5)**(1/2) - 1
print(f"5) Tasa efectiva semestral: {TES_5 * 100:.2f}%")

#Matematica Actuarial
#Biometria --eventos biologicos, relacionados con. la vida y la muerte
#Tasa de mortalidad -- Fallecer a cierta edad
#Superviviencia -- vivir hasta cierta edad
#Morbilidad -- Enfermad o incapcidad
#Tabla de mortalidad-edad-num personas vivas

