# -*- coding: utf-8 -*-
"""Funciones.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1q2VV-N2T9rgnkFoVWIkvYhxCRJZp2FKO

#Imputación valores nulos por la Moda
"""

# Imputar NaNs con la moda por columna en factores
for col in factores:
    if df[col].isnull().any():
        moda = df[col].mode(dropna=True)
        if not moda.empty:
            df[col].fillna(moda[0], inplace=True)

"""#Ajuste de Outliers"""

# Ajustar outliers por winsorización (percentil 0.5% y 99.5%)
for col in factores:
    if df[col].dtype != 'object':
        q_low = df[col].quantile(0.005)
        q_high = df[col].quantile(0.995)
        df[col] = np.clip(df[col], q_low, q_high)

"""#Correlacion"""

# -----------------------------
# Correlación

# Identificar factores más correlacionados con las variables objetivo
num_vars = [col for col in factores if df[col].dtype != 'object']
cor_matrix = df[num_vars + ["frecuencia", "severidad"]].corr()

# Selección de top variables correlacionadas con frecuencia y severidad
top_frecuencia = cor_matrix["frecuencia"].drop("frecuencia").abs().sort_values(ascending=False).head(5).index.tolist()
top_severidad = cor_matrix["severidad"].drop("severidad").abs().sort_values(ascending=False).head(5).index.tolist()

print("Top factores correlacionados con FRECUENCIA:", top_frecuencia)
print("Top factores correlacionados con SEVERIDAD:", top_severidad)

# -----------------------------
num_vars = [col for col in factores if df[col].dtype != 'object']
cor_matrix = df[num_vars + ["frecuencia", "severidad"]].corr()

plt.figure(figsize=(12, 10))
sns.heatmap(cor_matrix, annot=True, fmt=".2f", cmap="coolwarm")
plt.title("Matriz de Correlación entre factores y variables objetivo")
plt.tight_layout()
plt.show()